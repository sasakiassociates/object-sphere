interface SasakiObject {
  id: ID!
  name: String
}

type Box {
  center: Point
  xSize: Float
  yize: Float
  zsize: Float
}

interface PointCloud implements  SasakiObject{
  id: ID!
  name: String
  point: [Point]
}

type NormalCloud implements SasakiObject {
  id: ID!
  name: String
  normal: [NormalPoint]
}

type NormalPoint {
  point: Point!
  normal: Normal!
  meta: String
}

type Point implements Vector {
  x: Float!
  y: Float!
  z: Float!
}

type Normal implements Vector {
  x: Float!
  y: Float!
  z: Float!
}

interface Vector {
  x: Float!
  y: Float!
  z: Float!
}
